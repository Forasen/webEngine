计算机工程
COMPUTER ENGINEERING
1999年 第25卷 第10期 Vol.25 No.10 1999



离线手写汉字识别的并行实现
邵秀丽　刘璟　范志强
摘要：汉字识别属于大类别模式识别问题，用并行算法可望提高在单机环境下识别离线手写汉字图象的运行速度。提出了一种汉字识别算法的试行设计方案，试针对它在PVM环境下运行结果进行了性能分析。
关键词：并行算法；离线手写汉字；并行编程环境；弹性匹配
The Parallel Implementing of the Off-line Chinese Character Discrimination
Shao Xiuli Liu Jing Fan Zhiqiang
(Department of Computer and System Sciences,Nandai University,Tianjin 300071)
【Abstract】Because Chinese Character discrimination is a recognizing problem of large number of patern classes,in order to improve the OLCCR's(Off Line Character Recognize)speed running on the stand-alone computer,PA(Parallel Algorithm)should be used instead of SA(Sserial Algorithm).Thus,an efficacious parallel algorithm on Chinese Character recognizing was put forward and its performance in the environment of PVM was dissertated in this paper.
【Key words】Parallel algorithm;Off-line Chinese Character discrimination;Parallel environment;Spring match
　　离线手写字符、指纹识别是图象模式识别的热点问题，其中离线手写输入技术是计算机应用的高新领域之一 , 其成果是要解决技术的平民化问题。但目前还没有成功的离线手写汉字的识别系统，在线手写汉字的识别又需要附加许多设备和限制，不易学易用，不能平民化，很难推广应用。传统的手写字符识别大都采用基于汉字笔画及结构的分拆，不能作为脱机字符识别方法。考虑到：同一个汉字对应的手写字体会由于笔画的长短、延伸角度不同而有所区别，但彼此仍存在极大的相似性，对于这类图象的识别就可以相似度为依据进行弹性匹配。故把手写体汉字识别视为一种允许空间偏移的弹性模式识别匹配问题，二值图象匹配就是把输入的图象与图象库中的样本进行匹配，找出与输入图象相对应的样本。这种技术在模式识别中有着广泛的应用，例如稿件识别及指纹识别等。
　　由于手写字符很不规范，结构复杂，通过特征提取或对字进行划分等针对印刷体的方法难以得到可以接受的识别率，因此需要对它们进行改进，甚至采用新的算法。但改进的算法一般计算量很大，在难以接受的时间内识别出汉字。若将设计好的算法在并行环境下执行却可以达到实用的程度，况且硬件价钱日益低廉，让几台计算机同时做些识别工作，用户是可能承受的，因此我们做了一些尝试性的工作。
1  基础算法的性能分析
1.1  弹性匹配算法设计思想
　　目前二值图象匹配的算法较多，如抽取图象特征信息，运用神经网络算法等，但对待识图象要求苛刻、不实用。而我们采用的弹性匹配是一类特殊的模式匹配算法，它不像其它图象识别系统在样本库中搜索与模式完全一致的样本，而是运用智能算法对输入图象和样本图象进行"弹性" 变形，根据对输入图象与样本图象之间"距离"的大小决定输入图象对应样本库中哪一个。由于手写字符的随意性 , 很难找到共同的规律 , 因此一般的算法不是对手写体字符限制过严就是识别率太低。基于这些原因 , 可以把每个汉字视为二维图象汉字识别问题就成为二维图象匹配问题了 , 二维图象的匹配就是把输入的二维图象与已经存在于二维图象库中的样本进行匹配，找出与输入图象相对应的样本。故本文不考虑各个汉字的结构特征，而是采取一种基于近似串匹配算法的弹性匹配算法，其思想就是通过对输入图象和样本图象进行"弹性"变形，根据对输入图象与样本图象之间"距离"的大小决定输入样本对应样本库中哪一个样本。这样对任意输入的二维图象，计算它与模板图象的距离，把与最小距离对应的模板图象作为输入图象的匹配。也即把同一汉字的不同写法视为某种"弹性"变形的结果,因此可以称我们研究的算法为空间偏移匹配或弹性匹配算法。在文献[2]中介绍了二维图象弹性匹配的动态规划算法 , 该算法的具体思想是：把每个手写体汉字表示为m*n(一般为20*16)的二维图象存在于一个m*n的矩阵中,矩阵的元素与图象的象素一一对应，记载其灰度值为1或0。这样一来，二维图象就可被表示为向量长度为n的m个向量串，进而可类似于近似串匹配中的插入、删除和替换操作进行图象的弹性匹配。对任意一个手写字的识别就是把该手写体汉字的图象表示为dn上的m位向量串,然后计算输入串与样本库中字串之间的距离,根据计算结果确定一个或多个汉字的识别结果。即以两个图象的弹性距离为其相似程度的标准，在图象库Imagelib中匹配一个待识汉字图象P,也是逐一地从样本库中找出某个图象与待识字符P距离最小样本，若该距离小于某一规定值时就可认为待识字的样本被找到了 , 具体算法请参见文献[2]。
1.2  弹性匹配算法的性能分析
　　为检验二维图象弹性匹配算法的效果，我们应用该算法对离线手写体识别做了大量的实验工作。实验前，准备了一个小型的手写体汉字库，该库中包含了46个汉字，每个汉字有10个手写样本，每个样本的大小为20*16。这样，对输入的待识别字符，计算它与汉字库中的每个汉字的所有样本的弹性距离，把弹性距离最小的对应样本汉字作为待识字符所对应的汉字。通过实验得到了72%的识别率，比较令人满意。但在识别实验过程中也发现，虽然已经采用较其它算法有了很大改进的动态规划算法，它能大大减小计算量，但其计算时间仍然比较长。其时间复杂度为：每个样本的计算量为O(m2n2), 其中m，n分别为样本库中的样本的总个数和每个样本的不同手写汉字数，可见文献[2]提出的算法的时间复杂度太高，该算法存在的问题就是运行速度太慢，若扩大样本库中的字或变异字数，则算法运行的速度慢至用户难以忍受而无法推广,因此有必要对该算法作进一步的处理,本文中介绍的并行算法以期能改进这类问题。就文献[2]中的算法并行化的一种尝试办法是把手写体汉字库分成几部分，待识字图象与字库中样本的弹性匹配将并行计算，各自得出与输入样本弹性距离最小的汉字，然后从这几个最小弹性距离中找出在整个手写体汉字库中弹性距离最小的汉字。下面就文献[2]中的算法并行化实现方案作一介绍和分析。
2  并行体系结构与并行程序设计
　　目前，并行体系结构主要有对称式多处理机系统SMP、大规模并行处理机系统MPP、计算机的集群Cluster，可以说：Cluster、SMP、MPP和分布式系统是四个相互重叠的并行体系结构概念。其中，Cluster(独立的计算机集群)由于它的诸多优点而在近年来得到迅速发展和广泛应用。其最大优点在于它的高可伸缩性及高可用性，当然还有诸如：可充分利用原有旧设备，无需新投入；可包括不同结构的主机，可将不同的任务分配给最合适的主机运行以优化性能，可将任务并行化后作并行处理等优点；正是由于Cluster的性能，可以利用现有的机房设施装备PC机群进行实验。
2.1  并行程序设计
　　一般并行模型可分为MIMD和SIMD模型；MIMD(指多指令流多数据流)是指不同的指令由不同的进程同时完成，又分为两类：SPMD和MPMD，其中SPMD中所有的程序是同构的，程序代码相同，处理的数据不同；MPMD中所有的程序是异构的，即程序代码不同。
2.2  并行编程模型及环境
　　并行编程是指为一个给定算法构造一个并行程序，并行编程模型可分为隐式和显式模型。在本文实验过程中，选择了以消息传递为基础的PVM为并行编程环境。PVM是美国国家基金会资助的公开软件系统，即并行虚拟机，它包括众多的工具软件，如调试检测工具XPVM等，其特点是：①通用性强，即适合于TCP/IP网络环境，又适合于MPP大规模并行系统；②系统规模小、源码只有几MB；③所有的现有并行机厂商都宣布支持PVM了；④PVM是由美国国家基金会支持的公开的软件，可自由拷贝、修改；⑤成熟程度高，已有许多开发调试工具包可利用，已在全世界广为流传；⑥一批标准数字软件已移植到PVM下。
3  算法的并行实现
　　该方案的基本思想是将样本库进行划分，若有Pn个处理机，则将样本库分解为Pn个子库给每个处理机，当识别一个字符时，首先各个处理机在自己的子样本库内识别，而后从得出的Pn个字符中，选取与待识字符弹性距离最小的。
　　在PVM并行编程环境下，实现并行算法时使用的变量含义如下：
　　Pn代表处理机个数，在这里Pn=H；t代表从进程号；
　　Pattern代表待识别字符的图象(一个二维数组)；
　　ElasticDist是一个数组，记载Pattern与第g组中各样本间的弹性距离；
　　AveragElasticDist(Pattern,g)代表Pattern与某组样本g的平均距离；
　　MinDist代表Pattern与样本库中诸样本的最小弹性距离；
　　GroupNumber代表Pattern被识别成为某组样本中的某个字符;
　　A:大小为Pn,A[i]记载第i个从进程算得的平均弹性距离;
　　min(A,MinNo)返回A中的最小值，并将其下标赋予MinNo。
　　程序主要框架如下：
　　MinDist=最大值
　　while g<G do
　　　for t=1 to Pn par_do
　　　　A[t]=AveragElasticDist(Pattern,g);g=g+1;
　　　endfor
　　　if MinDist>min(A,MinNo)
　　　　MinDist=min(A,MinNo);GroupNumber=MinNo;
　　　endif
　　endwhile
　　return GroupNumber
　　该并行算法的流程：
　　①广播 Pattern 到各个从进程;
　　②将图象库中当前组t中的H 个样本数据分别发送给第一个从进程,当前组号g加1;
　　③重复2步Pn次,分别发给第二个,第三个,…,第Pn个从进程;
　　④等待接受Pn个返回结果;
　　⑤从Pn个值中取最小值,若它小于MinDist,则将其值赋予MinDist,且GroupNumber=它对应的组号;
　　⑥若样本库中的数据都已测试完毕,则程序运行结束,返回GroupNumber;否则重复执行②。
　　从进程的流程：
　　①接受主进程广播来的样本字符Pattern；
　　②接受一组样本字符数据并解压缩；
　　③分别计算待识字符与该组中每一个字符的弹性距离，取平均值；
　　④返回此平均值。
　　本算法的实现是主从式的：主进程负责向各从进程发送待识别字符并收集它们的识别结果且加以处理，得到最终的识别结果，从进程负责在自己的子样本库中识别待识字符。
4  算法的分析
　　在下面两种并行环境下对该算法进行了实验：一种环境是由若干PC组成的Cluster，每台PC的环境是Windows NT，另一种环境是曙光天潮1000A。理论上分析，该方案随着节点数的增加 , 每个节点的通信量减少，其时间复杂度为：O(m2n2/Pn +2GH+Gmn/8)+(2G+1)Tp；实验结果表明通信时间并没有随着节点数的增加而明显减少,从进程的通信反而增加，经分析找出原因在于本算法的并行机制还不完善,同步要求过高:主进程要在接受到全部的n个从进程的返回值后才发送下一组数据 , 这样会使较早完成计算的进程被迫耗费许多时间以等待下一轮计算数据的到来。该方案的测试结果分析为： 
　1 节点机 2 节点机4 节点机8 节点机
主进程运行时间21521074626432
主进程通信时间21521074624430
从进程平均计算时间2134917436.5228.7
从进程平均通信时间18157186169.3
加速比0.741.482.533.69
并行计算成本2152214825024512
运行效率0.740.740.630.36
5  结论
　　本文考虑到文献[2]提出的算法简单易于实现，而且对任何一种二维图象的识别都可以不作太大的改动就可以直接应用，也不需要对模板库中的样本作任何预先的处理(与神经网络算法相比)，只是其运行速度太慢，易于并行实现，所以本文并没有对文献[2]提出的算法进行改进，只是使其中的循环并行化，目的是希望能从并行角度对离线手写汉字识别问题进行初试。最终得出结论是：由于汉字是大类别模式识别问题，无论如何改进算法，其时间复杂度都太高，要彻底想使手写识别字速度快、识别率高，最佳改进办法是设计一个好的算法并使之并行实现。
作者简介：邵秀丽（1965～），女，副教授，主要研究方向为计算机仿真、并行算法
作者单位：南开大学计算机系统与科学系，天津300071
参考文献
1 Tang D,Gupta G.An Efficient Parallel Dynamic Programming Algorithm.Computers Math Apple,1995,30(8)：152
2 刘 ,白刚.脱机手写字符识别的DP算法的设计,中国图象图形学报,1998,3(3)：58
收稿日期：1999-03-01
