计算机研究与发展
JOURNAL OF COMPUTER RESEARCH AND DEVELOPMENT
1999年　第36卷　第11期　Vol.36　No.11　1999



用遗传算法构造二元决策树
吴　菲　黄梯云
摘　要：决策树的方法是一种优化的过程，遗传算法是模拟自然进化的通用全局搜索算法，文中将遗传算法应用到构造优化决策树，提出了采用遗传算法求解二元决策树的非叶结点的权值矢量，进而构造二元决策树的方法.并讨论了遗传算法的评价函数构造和编码方法，重点说明了如何对遗传算法进行改进，提高算法效率，然后分析了影响二元决策树错误分类率的因素，并用实例验证该方法构造的二元决策树对样本分类具有很高的辨识率.
关键词：遗传算法，二元决策树，权值矢量
中图法分类号：TP301；TP18
CONSTRUCTING BINARY DECISION TREES BY
USING GENETIC ALGORITHM
WU Fei and HUANG Ti-Yun
(Management School of Harbin Institute of Technology, Harbin 150001)
Abstract　Decision tree is an optimization method. By simulating the nature evolution, genetic algorithm becomes a kind of general-purpose global search algorithm. An approach to construct and optimize decision tree based on genetic algorithm is discussed in the paper here. A genetic algorithm is employed at each nonterminal node of the binary tree to search for weight vector. To achieve high performance, its fitness function and encoding method are discussed in detail, and in particular, much emphasis is put on its operator evolution. The effects of the misclassification rate of the binary tree are discussed and the experiment results show that the binary decision tree constructed based on genetic algorithmcan classify sample-set accurately.
Key words　genetic algorithm, binary decision tree, eight vector
1　引　言
　　遗传算法是一种基于生物学进化原理的搜索算法［1］，它模拟达尔文的遗传选择和自然淘汰的计算模型，通过在求解过程中使群体不断优化，进而找到最优解或准最优解.作为一种有效的全局并行优化搜索工具，遗传算法具有简单、通用、鲁棒性强和适于并行处理的特点，因而在工农业、经济政治、科学研繶等方面取得了广泛的应用.
　　分类系统是遗传算法研繶的一个分支，决策树是一种结构简单、搜索效率高的分类器［2］.目前出现了采用遗传算法对决策树结构运算，直接构造决策树的方法［3］，但没有涉及到对树结点的决策函数学习.文中提出采用遗传算法训练树结点的线性决策函数，进而构造二元决策树的方法.
2　基于二元决策树的遗传算法设计
　　二元决策树包含终结点（叶子结点）和非终结点，其中终结点表示类属性，非终结点包括决策函数和其左右子树.在决策树的非终结点进行属性值的比较并根据属性值的结果判断从该结点向下的分支，到达的终结点相对应的类则是输入值的属性［4］.
　　遗传算法在具体问题求解过程中，要确定目标的评价函数和变量的编码机制，以及遗传算法的基本操作：选择、交叉和变异的实现方法.文中重点讨论二元决策树的评价函数、编码机制及交叉、变异操作的改进.
2.1　遗传算法的评价函数构造
　　评价函数是遗传算法与具体应用问题的唯一接口，是种群中个体优劣的一种量化反映，它的构造直接影响问题求解的效率.
　　二元决策树的错误分类率是评价决策树的重要标准.设xt={x1,x2,…,xNt}为到达决策树中结点t的训练样本集，设xt=x1t∪x2t…xct,c代表类的数目，xit代表xt中属于类ωi的所有样本.
　　定义1.定义xt的错误率为其中“#”代表样本集样本数目的大小.
　　当xt仅包含来自同一类的样本时，i(xt)=0.设结点t的权值矢量为w，其将xt分为左子树xtL(w)和右子树xtR(w)两部分:
xtL(w)={x|x∈xt，并且wTx<0}；
xtR(w)={x|x∈xt，并且wTx>0}.
　　我们取分割后的错误率i′(xt,w)为结点xtL(w)和xtR(w)错误率的加权平均值.
　　定义2.样本分割后的错误率.
i′(xt,w)=p(xtL(w)|xt)i(xtL(w))+p(xtR(w)|xt)i(xtR(w))，
其中，

　　错误率的减少量Δi(xt,w)=i(xt)-i′(xt,w)，它表示结点t的样本分割前后的错误率减少量，我们选择Δi(xt,w)为评价函数，用以选择最好的决策函数，使错误率的减少量最大，即：f(y)=Δixt,w).
2.2　遗传算子的改进
2.2.1　交叉算子的改进
　　交叉是指把两个父代个体的部分结构加以替换重组而生成新个体的操作，是GA获取新优良个体的最重要手段.交叉操作是有照一定的概率Pc（即交叉概率）在配对库中随机地选取两个个体进行的.交叉的位置也是随机确定的.交叉概率Pc的值一般取得很大，在0.6～0.9之间.
　　最简单的交叉算子是单点交叉，但由于文中所用的参数的位串较长，仅采用单点交叉，位串的结构改变很小，不利于新信息的引入，导致搜索效率降低.为此引入了两点交叉，即在染色体中随机选取两点，然后交换两点中的一段基因链，一般来说其优于单点交叉.这种改进使得交叉操作有效地作用于每个参数的位串上，充分发挥交叉操作的威力，同时避免了参数位串破坏过大、或参数位串改变甚小的不合理情况的出现.实验表明，改进后的交叉算子使搜索效率得到了明显提高.
2.2.2　变异算子的改进
　　变异是按一定的变异概率Pm将位串的某一位或某几位的1变为0或0变为1.变异操作即保持了遗传算法的有效性，又是防止算法早熟的措施.
　　实验表明，遗传算法能较快地搜索到局部最优解，但从局部最优解搜索到全局最优解则需花费较长时间.为了提高搜索效率，提高解的精度，当遗传算法搜索到局部最优解时，我们有意地控制使参数位串的末几位，即最不重要的几位发生变异［5］，这相当于给参数的值增加或减少了一个小的步长，从而有可能以较小的代价找到参数的最优解.
　　设种群的个数为n，文中对变异操作的对象分为两大类：一类是适应值较高的m个个体，对这m个个体变异时，采用如上所述的动态控制变异位置的方法，而对另外n-m个个体变异时，仍然采用随机选取变异位置的方法.这样对于适应值高的个体，采用动态控制变异位置的方法保持了算法的搜索最优解能力，而对于适应值低的个体，采用随机选取变异位置的方法保证了算法的全局搜索能力，保证了算法的有效性.动态控制变异位置的方法实现如下：
　　设g代表进化过程中的繁衍代数，g*表示最优解第一次产生时的繁衍代数,迭代次数G，bitLength为二进制表示的个体的编码长度.
bit＝int(((g-g*)/G)×bitLength/2)+1;
bit1＝int(rand()×(bit-1)+1).
　　当g-g*逐渐增大时，bit从bitLength/2变化到1，变异位置bit1的取值在［bit，1］之间.
2.2.3　动态调整交叉概率、变异概率
　　在简单遗传算法中，由于Pc和Pm取为恒定值，因此用于复杂的多变量优化问题时，效率不高，并且存在“早熟”的可能性.为了提高效率和快速获得最优解，文中根据个体的适应度值动态地改变Pc和Pm.当群体有陷入局部最优解的趋势时，就相应地提高Pc和Pm，当群体在解空间发散时，就降低Pc和Pm.并且，对于适应值高的个体，对应于较低的Pc和Pm，使该解得以保护进入下一代；而对于适应值较低的个体，对应于较高的Pc和Pm，使该解被淘汰掉.这样即保持了群体的多样性，又保证了遗传算法的收敛性，有效地提高了遗传算法的优化能力.
　　动态调整交叉概率Pc的公式为

其中，fmax为当前种群最大的适应度值，favg为群体的平均适应度值，f′为待交叉的两个个体中较大的适应度值，k1，k2为［0，1］之间的数.
　　动态调整变异概率Pm的公式相同.
2.3　遗传算法的编码方法
　　编码方法是遗传算法的关键问题，关系到能否对所处理的问题进行合理且有效的描述.遗传算法的编码方法主要有两种：一种是二进制编码，另一种是浮点数编码.二进制编码是遗传算法中常见的编码技术，它的优点是：容易产生和操作、理论上容易处理、几乎任何问题都可以用二进制编码，但是二进制编码也存在一些缺点：首先是表示精度与算法效率之间的矛盾；其次，二进制编码的遗传算法在操作过程中，需要不断地对码串进行译码，增加了算法的计算量，降低了算法的效率.浮点数编码的表示精度依赖于计算机，只由计算机字长决定，不受其他条件限制，因而具有非常高的表示精度.此外，浮点表示能够表示非常大的区域，并且在算法操作过程中不需要进行数制转换，提高了算法的效率.但是，浮点编码也存在搜索能力差、基因操作不灵活等缺点.
　　二进制编码和十进制编码存在各自的利弊.文中采用的是二进制编码的方法，是因为二进制编码的基因操作灵活，并且对权值矢量w=(w1,w2,…wn)中的每个系数wi，i=(1,2,…n),对应一个20位长的二进制串Ai，这样wi的表示精度达到10-6，可以满足计算的需要.将Ai联结在一起则形成对应w的二进制串A,A=A1A2…An.设T代表从权矢量w到对应的二进制串的A操作，则A=T(w),w=T－1(A).
3　权值矢量的求解
　　遗传算法求解二元决策树结点的权值矢量有两个前提：
　　（1）产生一个初始种群Ю初始种群一般为随机产生，但这样容易造成基因缺损.为了使产生的初始种群均匀地分布在解空间中，文中初始解的产生规定如下：
　　假设x1和x2为结点t中两个来自不同类的样本，xi=(xi1,xi2,…xin,1)T，i=1,2，权值矢量w=(x21-并对w进行线性标准化操作，使权值矢量的每个系数wi的值在0与1之间，这样算法能够更快地找到优良群体所在的区域，加快迭代收敛速度，有利于提高算法的效率.
　　（2）终止条件的判定.文中规定为产生一定的后代后，若其权值矢量的最优解不发生变化，则停止.
　　遗传算法求解最优权值矢量的算法如下：
　　步骤1.建立一个初始种群p={A1,A2,…An},A*为当前种群中的最优解，f*=f(A*)，g*=g=0，g代表进化过程中的繁衍代数，g*表示最优解第一次产生时的繁衍代数，n代表到达当前结点的样本总数.
　　步骤2.对当前种群p中的每一个体计算适应度值，f(A)=Δi(p,T－1(A)).
　　步骤3.初始化解交配池M和后代O：
　　　M＝?
　　　O＝?
　　　g=g+1
　　步骤4.复制
　　　for i=1 to n do
　　　从当前种群p中用赌盘选择的方法选择一个个体A，
　　　M=M∪A.
　　步骤5.交叉
　　　fori=1ton/2do
　　　随机地从交配池M中选择个体A′和A″，根据个体的适应值，计算动态交叉概率Pc，并按照交叉概率Pc进行交叉，
　　　M=M-{A′,A″}
　　　O=O∪{A′,A″按照概率Pc交叉的后代}.
　　步骤6.变异
　　　设O={Ao1,Ao2,…Aon}，m为小于n的某一整数，
　　　在当前种群p中选择m个适应值最高的个体，控制个体的末几位进行变异；
　　　对其他n-m个个体Aoi，根据个体的适应值，计算动态变异概率Pm，并对Aoi中的每一位按概率Pm变异.
　　步骤7.替换
　　　假设Apb和Aow分别是上一代种群p中的最优解和新产生的子代O中的最差解：
　　　P=(O-{Aow})∪{Apb}.
　　步骤8.假设Ab为新一代p中的最优解
　　　if　f(Ab)>f*
　　　then Ab*=f(Ab),g*=转步骤2；
　　　else if g-g*<G,G为预先给定的一控制常量，
　　　　then　转步骤2；
　　　　else　返回最优解A*b.
4　二元决策树构造
　　文中采用自上而下的方法构造二元决策树，即从二元决策树的根结点开始用遗传算法求解结点的权值矢量，使得结点的决策燽数分割样本后的错误率减少量达到最大，求解出的权值矢量将样本分割为两个子集，并建立此结点的二个子结点，重复此分割过程直到结点满足终止条件，则定义此结点为终结点.为了叙述方便，定义如下术语.
　　定义3.N0为预定义结点所必须的最少样本数.
　　定义4.I1为预定义结点的最小错误率值.
　　定义5.I2为预定义结点分割后的错误率减少量最小值.
　　定义6.终止条件为i(xt)小于I1、或#xt小于N0或Δi(xt,)小于I2.
　　满足终止条件的结点为终结点，其类属性ωi，按以下公式计算：

　　二元决策树的结点数据结构用C++表示如下：
　　　classTreeNode:publicCObject{
　　　　public：
　　　　　　classTreeNode　*m_left;//左结点指针
　　　　　　classTreeNode　*m_right;//右结点指针
　　　　　　CVectorm_weight;//权值矢量
　　　　　　CObArraym_sampleSet;//结点所含样本数目
　　　　　　intm_classType;//类属性ωi
　　　　}
　　构造二元决策树的算法如下：
　　步骤1.打开样本库；
　　步骤2.对样本进行线性标准化；
　　步骤3.生成根结点；
　　步骤4.递归建立二元决策树；
　　①若#xt<N0，则结点t为叶结点，返回.
　　②若i(xt)<I1，则结点t为叶结点，返回.
　　③用遗传算法求解结点t的权值矢量w.
　　④按权值矢量w分割xt为xtL和xtR，
　　　　xtL(w)={x|x∈xt,并且wTx<0}
　　　　xtR(w)={x|x∈xt,并且wTx>0}
　　计算分割后的Δi(xt,w)值.
　　⑤若Δi(xt,w)小于I2，定义结点t为叶结点，置结点的左右子树为空，否则生成结点t的左子结点和右子结点，其所含样本集分别为xtL和xtR.
　　　　对结点t的左子结点递归调用建立二元决策树；
　　　　对结点t的右子结点递归调用建立二元决策树.
步骤5.对每个叶结点，计算它的类属性.返回决策树T.
5　实验结果
　　现以股票评估为例说明二元决策树的分类情况.选择159种股票作为样本.选择股票的总资产周转率、销售增长率、净利增长率、总资产增长率、总资产规模、总资产净利率、销售净利率、净资产收益率、股东权益比作为评价标准.评价结果分为三类，分别表示绩优、垃圾和普通这三种不同的股票类别.
　　选择最小错误率I1、最小分割错误率减少量I2作为参变量，遗传算法的交叉概率、变异概率、迭代次数G、最小分类数作为固定值，分别为0.9，0.3，100，2.并进行了多次实验，平均结果如表1所示.
表1　二元决策树分类结果

最小错误率I1最小分割错误率减少量I2错误分类数错误分类率
0.050.038.725.48％
0.050.022.841.78％
0.050.010.690.43％
0.040.034.102.57％
0.040.022.141.34％
0.040.010.520.33％
0.030.021.981.25％
0.030.010.450.28％
0.020.021.350.85％
0.020.010.360.23％

　　最小错误率I1和最小分割错误率减少量I2直接决定二元决策树的错误分类率，从表1中可以看出改变最小错误率I1和最小分割错误率减少量I2，可以控制二元决策树的错误分类率，使系统成为受控系统. 
6　结束语
　　文中提出了用遗传算法构造二元决策树的方法，并对遗传算法进行了改进，明显地提高了算法的收敛速度.该方法提高了辨识样本的准确率和速度，为样本分类提供了一种简单、通用、有效的方法.文中有如下特点：①遗传算法的改进；②遗传算法求解结点的权值矢量；③根据树结点的错误率与分割后的错误率减少量构造二元决策树；④二元决策树的错误分类率可以人为控制.
*本课题得到国家自然科学基金资助(项目编号79670023).
作者简介：吴菲，女，1973年5月生，博士研究生，主要研究方向为遗传算法、自然语言理解、智能决策支持系统.
　　　　　黄梯云，男，教授，博士生导师，主要研究方向为决策支持系统、管理信息系统.
作者单位：哈尔滨工业大学管理学院　哈尔滨　150001
参考文献
1　Goldberg D. Genetic Algorithm in Search, Optimization and Machine Learning. Reading, MA: Addison-Wesley, 1989
2　陈恩红，王清毅，蔡庆生. 基于决策树学习中的测试生成及连续属性的离散化. 计算机研究与发展，1998, 35(5)：403～407
　　(Chen Enhong, Wang Qingyi, Cai Qingsheng. Test generation and discretization of continuously-valued attributes in decision-tree-based learning. Journal of Computer Research & Development (in Chinese), 1998, 35(5):403～407)
3　肖勇，陈意云. 用遗传算法构造决策树.计算机研究与发展，1998, 35(1):49～52 
　　(XiaoYong, Chen Yiyun. Constructing decision trees by using genetic algorithm. Journal of Computer Research & Development (in Chinese), 1998, 35(1): 49～52)
4　Chai B B, Huang T, Zhuang X H, Sklansy J. Piecewise linear classifiers using binary tree structure and genetic algorithm. Pattern Recognition, 1996, 29(11): 1905～1917
5　荚伟等. 遗传算法在软件测试数据生成中的应用.北京航空航天大学学报，1998, 24(4)：434～437
　　(Jia Wei et al. Genetic algorithms and their application in software　test data generation. Journal of Beijing University of Aeronautics and Astronautics (in Chinese),1998, 24(4): 434～437)
原稿收到日期：1999-01-13；修改稿收到日期：1999-08-08.
